name: CI/CD for Next.js App

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }} # Uses your repo name (e.g., your-username/repo-name) as image name

jobs:
  build-and-push-docker-image:
    runs-on: ubuntu-latest # The type of machine to run the job on
    permissions:
      contents: read
      packages: write # Grant permission to write to GitHub Container Registry (GHCR)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Action to get your code

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }} # Your GitHub username
          password: ${{ secrets.GITHUB_TOKEN }} # Special token provided by GitHub Actions

      - name: Extract metadata (tags, labels) for Docker
        id: meta # Give this step an ID so we can refer to its outputs later
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha # Tag with the commit SHA
            type=ref,event=branch # Tag with the branch name (e.g., 'main')
            type=semver,pattern=v{{version}} # Optional: if you use v1.0.0 style tags
            type=schedule,pattern={{date 'YYYYMMDD'}} # Optional: for daily builds

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Build from the current directory (where Dockerfile is)
          push: true # Actually push the image to the registry
          tags: ${{ steps.meta.outputs.tags }} # Use the tags generated by the 'meta' step
          labels: ${{ steps.meta.outputs.labels }} # Use the labels generated by the 'meta' step
          cache-from: type=gha # Use GitHub Actions cache for faster builds
          cache-to: type=gha,mode=max

      # This step is just to help you see the final GHCR URL in the workflow logs
      - name: Get GHCR Image URL (for reference)
        id: ghcr_url
        run: |
          echo "The primary image URL will be: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main"
          echo "Other tags might be: ${{ steps.meta.outputs.tags }}"
          echo "::set-output name=main_url::${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main" # This makes the URL available for later steps if needed
